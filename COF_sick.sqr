!***********************************************************************
! COFBN202.SQR: Allocation of Non Accruable Sick Leave to temprary and *
! and part time employeed hired by City of Fremont. Any remaining bal  *
! from the previous year will be removed and 40 hours will be frontloaded *
! in their leave bucket.                                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
! Author:   Ramanpreet Bhatia                                          *
! Date:     12/04/23                                                   *
!                                                                      *
!***********************************************************************
!**********************************************************************
!Do not forget to update COFLVDSP.SQR with the date used here.
!***********************************************************************
!***********************************************************************


#include 'setenv.sqc'   !Set environment
begin-setup
#include 'ptset02.sqc'  !Printer and page-size initialization
end-setup


!***********************************************************************
begin-program
!***********************************************************************

Do Init-DateTime
Do Init-Number
Do Get-Current-DateTime
Do Init-Report
Do Reset
Do Stdapi-Term

end-program

!***********************************************************************
begin-heading 5
!***********************************************************************

#Include 'stdhdg02.sqc'  

    !--------------------------------------------------------------------
    !--Reports Old Balance, Accrual, Current Used, and New Balance for  -
    !--Each Leave Plan.  Ordered By Paygroup, Deptid, Emplid, Empl Rcd -
    !--------------------------------------------------------------------

Print 'Paygroup'        (+1,10,8)
Print 'Dept ID'         (,+2,10)
Print 'Empl ID'		(,+2,11)
Print 'Empl Rcd'        (,+2,8)
Print 'Empl Name'       (,+2,25)
Print 'Plan Type'       (,+2,9)
Print 'Ben Plan'        (,+2,8)
Print 'Prior Bal'       (,+2,12)
Print 'Employee Type'	      (,+2,7)
Print '  New Bal'		(,+2,12)
print '-'               (+1,10,128)fill

end-heading

!***********************************************************************
begin-procedure Print-Data
!***********************************************************************


Print $Paygroup         (+1,10,8)
Print $Deptid           (,+2,10)
Print $Emplid           (,+2,11)
Print #EmplRcd          (,+2,8)		
Print $Name             (,+9,25)
Print $Plntype          (,+2,9)
Print $Benpln           (,+2,8)
Print #OldLvBal         (,+2,12)	
Print $RegTemp            (,+6,7)  	
Print #NewBal           (,+2,12)	

end-procedure	!Print-Data

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

 move 'COFBN203.SQR'  to $ReportID
 move 'Annual CA Sick Leave' to $ReportTitle

 show 'REPORT ID   : ' $ReportID
 show 'REPORT TITLE: ' $ReportTitle
 display ' '

  Do Stdapi-Init

  if $prcs_process_instance = ''
      input $AccrPrcDt 'Please enter the Accrual Process Date (DD-MMM-YYYY):  '
	  
	Do Get-Pay-Calendar
	  
    else
      Do Select-Parameters
  end-if

end-procedure Init-Report

!***********************************************************************
begin-procedure Select-Parameters
!***********************************************************************

begin-SELECT

RC.OPRID
RC.RUN_CNTL_ID
RC.ACCRUAL_PROC_DT

  Let $AccrPrcDt      =  '19-JUN-2023'!&RC.ACCRUAL_PROC_DT
 
   Do Get-Pay-Calendar

FROM PS_COF_BN201_RNCTL RC
WHERE RC.OPRID        = $prcs_oprid
  AND RC.RUN_CNTL_ID  = $prcs_run_cntl_id

end-select

end-procedure

!***********************************************************************
Begin-Procedure Get-Pay-Calendar
!***********************************************************************
  Display 'Get-Pay-Calendar'
    !--------------------------------------------------------------------
    !--Some of the accruals are reset at specific points in the year    -
    !--This is used to get the month and pay_period of the last         -
    !--confirmed payroll.  This will also be used to                    -
    !--reset YTD values at beginning of calendar year                   -
    !--------------------------------------------------------------------


Begin-Select Distinct

TO_CHAR(PC.PAY_END_DT,'MM') &MONTH
TO_CHAR(PC.CHECK_DT,'MM') &RMONTH		! CE020101
PC.PAY_PERIOD
PC.RUN_ID
PC.PAY_END_DT
TO_CHAR(PC.PAY_END_DT,'MM') &CURRENT_MONTH
TO_CHAR(PC.PAY_END_DT,'YYYY') &CURRENT_YEAR


  Let $Pay_Run_Id = &PC.RUN_ID
  Let $PayEndDt = &PC.PAY_END_DT


      display ' '
	show 'PayEndDt : ' &PC.PAY_END_DT

	!--------------------------------------------------
	!----- CHECK IF PAY CALENDAR EXISTS           -----
	!--------------------------------------------------

	Do Check-Pay-Calendar	



FROM PS_PAY_CALENDAR PC
WHERE PC.PAY_CONFIRM_RUN = 'Y'
!AND PC.PAY_END_DT = '18-JUN-2022' !UO2022 - need to update to June 18th for prod, the date must be previous Pay end date.
AND PC.PAY_END_DT = '17-JUN-2023' !Chi2023 - 
 ! AND PC.PAY_END_DT = (SELECT MAX(PPC.PAY_END_DT)
 !                      FROM PS_PAY_CALENDAR PPC
 !                      WHERE PPC.PAY_CONFIRM_RUN = PC.PAY_CONFIRM_RUN
 !                      AND PPC.PAYGROUP NOT IN ('RET','MCC'))
  AND PC.PAYGROUP NOT IN ('RET','MCC') 

end-select

end-procedure	!Get-Pay-Calendar

!***********************************************************************
begin-procedure Check-Pay-Calendar
!***********************************************************************
Display 'Check-Pay-Calendar'
let $fiscal_year_exist = 'N'
let $Invalid_Date = 'N'

let #current_month = &RMONTH
  Show 'Current month ' &RMONTH

let $beginning_of_leave_grant = '01-JAN-' || &CURRENT_YEAR
let $end_of_leave_grant       = '31-DEC-' || &CURRENT_YEAR
let $month_year               = '12-' || &CURRENT_YEAR
let $end_of_begin             = '01-DEC-' || &CURRENT_YEAR      


display ' '
show 'BEGINNING OF LEAVE GRANT YEAR: ' $beginning_of_leave_grant
show 'END OF LEAVE GRANT YEAR      : ' $end_of_leave_grant

!show '$Month_year             : ' $Month_year

begin-SELECT

MAX(TO_CHAR(CHK_CAL.PAY_END_DT,'MM-YYYY')) &CHK_CAL.PAY_END_DT
    
	if &CHK_CAL.PAY_END_DT = $Month_year
		let $fiscal_year_exist = 'Y'
	end-if
	
!	show '&CHK_CAL.PAY_END_DT ' &CHK_CAL.PAY_END_DT

FROM PS_PAY_CALENDAR CHK_CAL 

WHERE CHK_CAL.PAY_END_DT <= $end_of_leave_grant
  AND CHK_CAL.PAY_END_DT >= $end_of_begin

end-select

 if $AccrPrcDt <= &PC.PAY_END_DT 
      Let $Invalid_Date = 'Y'
 end-if

 Do Check-For-New-Fiscal-Year

 if $fiscal_year_exist = 'Y' and $Invalid_Date = 'N' and $Mode = 'FISCAL_YEAR'
	Do Process-Main
 else
   if $fiscal_year_exist <> 'Y'
	Print 'Pay Calendars have not been created through the end of the fiscal year.' (+2,) center
	Print 'Please create the Pay Calendars.'                                        (+1,) center
	Print 'No records to process.'                                                  (+3,) center
  end-if
  end-if

 if $Mode <> 'FISCAL_YEAR'
     show 'Value of Mode : ' $Mode
     Print 'Invalid date for processing fiscal year non-accruable leave allocation.' (+2,) center
 else
   if $Invalid_Date = 'Y'
     Print 'Accrual Process Date should be greater than last Pay End Date'           (+2,) center
   end-if
 end-if

end-procedure


!***********************************************************************
begin-procedure Process-Main
!***********************************************************************

    !--------------------------------------------------------------------
    !--Selects info from PS_Job, to show up on the report.          -
    !--------------------------------------------------------------------

Begin-Select
J.EMPLID    
J.EMPL_RCD 
J.EFFDT
TO_CHAR(J.EFFDT,'YYYY') &EFFDT_YEAR  
J.PAYGROUP  
J.DEPTID    
J.COMPANY
J.REG_TEMP   
J.STD_HOURS 
N.NAME					
LP.PLAN_TYPE
LP.BENEFIT_PLAN

    Let $Emplid    = &J.EMPLID
    Let #Emplrcd   = &J.EMPL_RCD
    Let $Paygroup  = &J.PAYGROUP
    Let $Company   = &J.COMPANY
    Let $RegTemp   = &J.REG_TEMP
    Let $DeptId    = &J.DEPTID
    Let #StdHrs    = &J.STD_HOURS
    Let $Name      = &N.NAME
    Let $PlanType  = &LP.PLAN_TYPE
    Let $BenPlan   = &LP.BENEFIT_PLAN

!         Show '' 
!    Show '                    EmplID = ' $Emplid
!    Show '                Empl Rcd # = ' #Emplrcd
!    Show '                  Paygroup = ' $Paygroup
!   
!   Do Reset-Accrual-Variables   
!   Do Get-FTE-Status
!   Do Get-Personal-Data       !fvg081607
!   Do Get-Benefit-Program
!   Do Get-Plan-Type-Order
    Do Print-Data

    Let #Empcount = #Empcount + 1

FROM 
    PS_JOB J
JOIN 
    PS_NAMES N ON J.EMPLID = N.EMPLID
JOIN
    PS_LEAVE_PLAN LP ON J.EMPLID = LP.EMPLID
WHERE 
    J.REG_TEMP = 'T' 
    AND J.COMPANY = 'COF'
    AND LP.BENEFIT_PLAN = 'CASICK' 
    AND LP.PLAN_TYPE = '50'
!  AND J.PAYGROUP = 'IAF'             ! CE042501 to run one paygroup
! AND J.EMPLID = '11862'   !Used to run one employee             !CE101001 
    AND J.EFFDT  = (SELECT MAX(A_ED.EFFDT)
                    FROM PS_JOB A_ED
                    WHERE J.EMPLID     = A_ED.EMPLID
                      AND J.EMPL_RCD  = A_ED.EMPL_RCD
                      AND A_ED.EFFDT  <= '19-JUN-2023')
    AND J.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ)
                    FROM PS_JOB A_ES
                    WHERE J.EMPLID    = A_ES.EMPLID
                      AND J.EMPL_RCD = A_ES.EMPL_RCD
                      AND J.EFFDT     = A_ES.EFFDT)
!AND J.COMPANY = 'COF'                !fvg081607
    AND J.EMPLID = N.EMPLID            !fvg081607
    AND N.NAME_TYPE = 'PRI'                    !fvg081607      
    AND N.EFFDT = (SELECT MAX(N_ED.EFFDT) FROM PS_NAMES N_ED  
                 WHERE N.EMPLID = N_ED.EMPLID          
                 AND N.NAME_TYPE = N_ED.NAME_TYPE     
                 AND N_ED.EFFDT <= '19-JUN-2023')             
ORDER BY J.PAYGROUP, N.NAME
end-select

!Do Update-Leave-Plan-Table			! Take this out for testing

Display #Empcount

end-procedure    !Main



!************************************************************************
Begin-Procedure Check-For-New-Fiscal-Year
!************************************************************************

  Let $JUL1 = '01-JUL-'||&CURRENT_YEAR				

  Do Convert-To-DTU-Date($JUL1, $dtu-date)
  Do dtu-subtract-days($dtu-date, 13, $dtu-date-out)
!  Do dtu-subtract-days($dtu-date, 32, $dtu-date-out)  !For Testing Only
  Do Convert-From-DTU-Date($dtu-date-out, $beg_date_FY_accrual_proc)
  Do Format-DateTime($beg_date_FY_accrual_proc, $begdate, {DEFYMD}, '', '')

  Let $end_date_FY_accrual_proc = $JUL1
  Do Format-DateTime($end_date_FY_accrual_proc, $enddate, {DEFYMD}, '', '')
  !let $AccrPrcDt = '19-JUN-2023'
  Do Format-DateTime($AccrPrcDt, $acprc, {DEFYMD}, '', '')

  if $acprc >= $begdate and $acprc <= $enddate
    let $Mode = 'FISCAL_YEAR'
  else
    let $Mode = 'NOT_FISCAL_YEAR'
      show 'ACPRC : ' $acprc
      show 'AccrPrcDt : ' $acprc
      show 'BEGDATE : ' $begdate
      show 'ENDDATE : ' $enddate
  end-if

!  Display $Mode
  
End-Procedure Check-For-New-Fiscal-Year

!***********************************************************************
!Begin-Procedure Update-Leave-Plan-Table
!***********************************************************************

    !--------------------------------------------------------------------
    !--The delivered program updates this table with the last Accrual   -
    !--Process Date used.  PeopleCode is included in the Run Control    -
    !--Panel to ensure that an Accrual Process Date is not used that is -
    !--prior to anything used before. This code replicates the          -
    !--delivered functionality                                          -
    !--------------------------------------------------------------------
!We do not need this too- RAMAN*******************
!
! RAMAN
!
!*************************************************

! begin-sql

! update PS_LEAVE_PLAN_TBL LPT
!    Set ACCRUAL_PROC_DT = $AccrPrcDt
!  WHERE LPT.PLAN_TYPE in ('5X','5T')
!    AND LPT.EFFDT = (SELECT MAX(LPT_A.EFFDT)
!                       FROM PS_LEAVE_PLAN_TBL LPT_A
!                      WHERE LPT.PLAN_TYPE    = LPT_A.PLAN_TYPE
!                        AND LPT.BENEFIT_PLAN = LPT_A.BENEFIT_PLAN
!                        AND LPT_A.EFFDT     <= $AccrPrcDt)
! end-sql

!end-procedure	!Update-Leave-Plan-Table


!***********************************************************************
! SQC Files for called procedures (all standard shell sqc's)
!***********************************************************************
#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines fro date arithmetic
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get Department Name from the Department Table
